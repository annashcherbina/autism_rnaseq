batches=read.table("merged_rsem/batches.txt",header=TRUE)
head(data)
colnames(data)
cols <- c( 'GeneID' , 'GeneName')
# create a new column `x` with the three columns collapsed together
data$x <- apply( data[ , cols ] , 1 , paste , collapse = "-" )
# remove the unnecessary columns
data <- data[ , !( names( data ) %in% cols ) ]
head(data)
data=read.table("merged_rsem/rna.counts.txt.tpm",header=TRUE)
batches=read.table("merged_rsem/batches.txt",header=TRUE)
# columns to paste together
cols <- c( 'GeneID' , 'GeneName')
# create a new column `x` with the three columns collapsed together
rownames(data) <- apply( data[ , cols ] , 1 , paste , collapse = "-" )
# remove the unnecessary columns
data <- data[ , !( names( data ) %in% cols ) ]
head(data)
#remove genes with 0 counts
data=data[rowSums(data)>0,]
#get TPM, quantile normalize
tpm=voom(data,normalize.method = 'quantile')
E=tpm$E
E=round(E,2)
data.pca=prcomp(t(E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component",ylim=c(0,40), xlim=c(0,10))
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
pca_df
var_explained
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Condition))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Cell))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,fill=pca_df$Sample))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")
pca_df$Sample=factor(pca_df$Sample)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,fill=pca_df$Sample))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
pca_df$Sample=factor(pca_df$Sample)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Sample))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")
rm(list=ls())
library(limma)
library(sva)
library(ggplot2)
data=read.table("merged_rsem/rna.counts.txt.tpm",header=TRUE)
batches=read.table("merged_rsem/batches.txt",header=TRUE)
# columns to paste together
cols <- c( 'GeneID' , 'GeneName')
# create a new column `x` with the three columns collapsed together
rownames(data) <- apply( data[ , cols ] , 1 , paste , collapse = "-" )
# remove the unnecessary columns
data <- data[ , !( names( data ) %in% cols ) ]
#remove genes with 0 counts
data=data[rowSums(data)>0,]
#get TPM, quantile normalize
tpm=voom(data,normalize.method = 'quantile')
E=tpm$E
E=round(E,2)
data.pca=prcomp(t(E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
pca_df$Sample=factor(pca_df$Sample)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Sample))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Sample))+
geom_point()+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Sample))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: uncorrected")+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Sample))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))+
theme_bw()
pca_df
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a'))+
theme_bw()
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 4.15%")+
ylab("PC3: 2.88%")+
ggtitle("PCA: PC2 vs PC3")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a'))+
theme_bw()
rm(list=ls())
library(limma)
library(sva)
library(ggplot2)
data=read.table("merged_rsem/rna.counts.txt.tpm",header=TRUE)
batches=read.table("merged_rsem/batches.txt",header=TRUE)
# columns to paste together
cols <- c( 'GeneID' , 'GeneName')
# create a new column `x` with the three columns collapsed together
rownames(data) <- apply( data[ , cols ] , 1 , paste , collapse = "-" )
# remove the unnecessary columns
data <- data[ , !( names( data ) %in% cols ) ]
#remove genes with 0 counts
data=data[rowSums(data)>0,]
#get TPM, quantile normalize
tpm=voom(data,normalize.method = 'quantile')
E=tpm$E
E=round(E,2)
data.pca=prcomp(t(E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
pca_df$Sample=factor(pca_df$Sample)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Batch))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a','#984ea3'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Batch))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a','#984ea3'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Batch))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a','#984ea3'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC3,y=pca_df$PC4,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 4.15%")+
ylab("PC3: 2.88%")+
ggtitle("PCA: PC2 vs PC3")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC4,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 4.15%")+
ylab("PC3: 2.88%")+
ggtitle("PCA: PC2 vs PC3")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a'))+
theme_bw()
mod0=model.matrix(~1,data=batches)
mod1=model.matrix(~Cell+Condition,data=batches)
#RUN SVA
sva.obj=sva(E,mod1,mod0)
sur_var=data.frame(sva.obj$sv)
cleaned_E=removeBatchEffect(E,covariates=sur_var)
data.pca=prcomp(t(cleaned_E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component",ylim=c(0,40), xlim=c(0,10))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Genotype))+
geom_point()+
xlab("PC1: 5.52%")+
ylab("PC2: 4.31%")+
ggtitle("PCA: SVA correction")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Cell))+
geom_point()+
xlab("PC1: 5.52%")+
ylab("PC2: 4.31%")+
ggtitle("PCA: SVA correction")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point()+
xlab("PC1: 5.52%")+
ylab("PC2: 4.31%")+
ggtitle("PCA: SVA correction")
sva.obj=sva(E,mod1,mod0)
sur_var=data.frame(sva.obj$sv)
cleaned_E=removeBatchEffect(E,covariates=sur_var,design=mod1)
data.pca=prcomp(t(cleaned_E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 1.73%")+
ylab("PC3: 1.66%")+
ggtitle("PCA: SVA correction")+
theme_bw()
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 1.73%")+
ylab("PC3: 1.66%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC3: 1.66%")+
ggtitle("PCA: SVA correction")+
theme_bw()
batches
paste0(batches$Cell,batches$Condition)
paste(batches$Cell,batches$Condition,sep='-')
batches$CellCondition=paste(batches$Cell,batches$Condition,sep='-')
batches$Group=paste(batches$Cell,batches$Condition,sep='-')
mod2=model.matrix(~0+Group,data=batches)
fit=lmFit(cleaned_E,mod2)
fit
tpm=2^cleaned_E
write.table(tpm,file="corrected_tpm.txt",row.names=TRUE,col.names=TRUE,sep='\t')
tpm_cd47=t(tpm['ENSG00000196776.16-CD47',])
write.table(tpm_cd47,file="tpm_cd47.txt",row.names = TRUE,col.names = TRUE,sep='\t')
tpm_cd47
t(tpm_cd47)
batches$cd47=t(tpm_cd47)[1]
batches
batches$cd47=t(tpm_cd47)
batches$cd47
batches$cd47=t(tpm_cd47)
ggplot(batches,
aes(x=batches$Condition,
y=batches$cd47,
group=batches$Cell))+
geom_boxplot()
ggplot(batches,
aes(x=batches$Condition,
y=batches$cd47,
fill=batches$Cell))+
geom_boxplot()
tpm=2^cleaned_E
write.table(tpm,file="corrected_tpm.txt",row.names=TRUE,col.names=TRUE,sep='\t')
tpm_cd47=tpm['ENSG00000196776.16-CD47',]
batches$cd47=tpm_cd47
ggplot(batches,
aes(x=batches$Condition,
y=batches$cd47,
fill=batches$Cell))+
geom_boxplot()
write.table(batches,file="tpm_cd47.txt",row.names = TRUE,col.names = TRUE,sep='\t')
source('~/brahma/cd47/plot_cd47.R')
data
source('~/brahma/cd47/plot_cd47.R')
source('~/brahma/cd47/plot_cd47.R')
source('~/brahma/cd47/plot_cd47.R')
fit
#LIMMA REGRESSION ANALYSIS
mod2=model.matrix(~0+Group,data=batches)
fit=lmFit(cleaned_E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC-ASD-DM - GroupIPSC-ASD-N",
IPSC_ASDDM_TDN="GroupIPSC-ASD-DM - GroupIPSC-TD-N",
IPSC_ASDN_TDN="GroupIPSC-ASD-N - GroupIPSC-TD-N",
NPC_ASDDM_ASDN="GroupNPC-ASD-DM - GroupNPC-ASD-N",
NPC_ASDDM_TDN="GroupNPC-ASD-DM - GroupNPC-TD-N",
NPC_ASDN_TDN="GroupNPC-ASD-N - GroupNPC-TD-N",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['CD47',])
}
model
fit
mod2
source('~/brahma/cd47/diff_analysis_cd47.R')
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
fit=lmFit(E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM - GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM - GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN - GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM - GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM - GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN - GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
mod2=model.matrix(~0+Group,data=batches)
fit=lmFit(cleaned_E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM - GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM - GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN - GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM - GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM - GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN - GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
fit=lmFit(2^cleaned_E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM - GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM - GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN - GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM - GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM - GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN - GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM-GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM-GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN-GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM-GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM-GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN-GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
getwd()
setwd("~/brahma/gm12878_dnase/")
dir()
setwd("bQTL/")
dir()
source('~/brahma/gm12878_dnase/bQTL/correlation_count_profile_effects.R')
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref))+geom_bin2d(bins = 100) +
scale_fill_continuous(type = "viridis") +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$JSD))+geom_point(alpha=0.3) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$JSD))+geom_point(size=0.1) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$JSD))+geom_point(size=0.1,alpha=0.5) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
tfsig$similar=tfsig$JSD<0.10
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$similar))+geom_point(size=0.1,alpha=0.5) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$similar))+geom_point(size=0.1) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
getwd()
setwd("brahma/autism/pathways_gorilla/")
source('~/brahma/autism/pathways_gorilla/pathway_bargraph.R')
asdn_tdn
source('~/brahma/autism/pathways_gorilla/pathway_bargraph.R')
source('~/brahma/autism/pathways_gorilla/pathway_bargraph.R')
source('~/brahma/autism/pathways_gorilla/pathway_bargraph.R')
source('~/brahma/autism/pathways_gorilla/pathway_bargraph.R')
source('~/brahma/autism/pathways_gorilla/pathway_bargraph.R')
setwd("../")
setwd("diff_genes/")
source('~/brahma/autism/diff_genes/top_diff_genes_heatmap.R')
source('~/brahma/autism/diff_genes/top_diff_genes_heatmap.R')
source('~/brahma/autism/diff_genes/top_diff_genes_heatmap.R')
