tpm=voom(data,normalize.method = 'quantile')
E=tpm$E
E=round(E,2)
data.pca=prcomp(t(E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
pca_df$Sample=factor(pca_df$Sample)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#a6cee3','#1f78b4','#b2df8a','#33a02c','#fb9a99','#e31a1c','#fdbf6f','#ff7f00','#cab2d6','#6a3d9a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Batch))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a','#984ea3'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Batch))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a','#984ea3'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Batch))+
geom_point(size=3)+
xlab("PC1: 60.13%")+
ylab("PC2: 4.15%")+
ggtitle("PCA: PC1 vs PC2")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a','#984ea3'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC3,y=pca_df$PC4,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 4.15%")+
ylab("PC3: 2.88%")+
ggtitle("PCA: PC2 vs PC3")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a'))+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC4,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 4.15%")+
ylab("PC3: 2.88%")+
ggtitle("PCA: PC2 vs PC3")+
scale_color_manual(values=c('#e41a1c','#377eb8','#4daf4a'))+
theme_bw()
mod0=model.matrix(~1,data=batches)
mod1=model.matrix(~Cell+Condition,data=batches)
#RUN SVA
sva.obj=sva(E,mod1,mod0)
sur_var=data.frame(sva.obj$sv)
cleaned_E=removeBatchEffect(E,covariates=sur_var)
data.pca=prcomp(t(cleaned_E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component",ylim=c(0,40), xlim=c(0,10))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
pca_df=data.frame(data.pca$x)
pca_df=cbind(pca_df,batches)
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Genotype))+
geom_point()+
xlab("PC1: 5.52%")+
ylab("PC2: 4.31%")+
ggtitle("PCA: SVA correction")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,color=pca_df$Cell))+
geom_point()+
xlab("PC1: 5.52%")+
ylab("PC2: 4.31%")+
ggtitle("PCA: SVA correction")
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point()+
xlab("PC1: 5.52%")+
ylab("PC2: 4.31%")+
ggtitle("PCA: SVA correction")
sva.obj=sva(E,mod1,mod0)
sur_var=data.frame(sva.obj$sv)
cleaned_E=removeBatchEffect(E,covariates=sur_var,design=mod1)
data.pca=prcomp(t(cleaned_E))
var_explained=as.character(round(100*data.pca$sdev^2/sum(data.pca$sdev^2),2))
barplot(100*data.pca$sdev^2/sum(data.pca$sdev^2),las=2,ylab="% Variance Explained",xlab="Principal Component")
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 1.73%")+
ylab("PC3: 1.66%")+
ggtitle("PCA: SVA correction")+
theme_bw()
var_explained
ggplot(data=pca_df,aes(x=pca_df$PC2,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC2: 1.73%")+
ylab("PC3: 1.66%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC2,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC2: 1.73%")+
ggtitle("PCA: SVA correction")+
theme_bw()
ggplot(data=pca_df,aes(x=pca_df$PC1,y=pca_df$PC3,shape=pca_df$Cell,color=pca_df$Condition))+
geom_point(size=3)+
xlab("PC1: 70.99%")+
ylab("PC3: 1.66%")+
ggtitle("PCA: SVA correction")+
theme_bw()
batches
paste0(batches$Cell,batches$Condition)
paste(batches$Cell,batches$Condition,sep='-')
batches$CellCondition=paste(batches$Cell,batches$Condition,sep='-')
batches$Group=paste(batches$Cell,batches$Condition,sep='-')
mod2=model.matrix(~0+Group,data=batches)
fit=lmFit(cleaned_E,mod2)
fit
tpm=2^cleaned_E
write.table(tpm,file="corrected_tpm.txt",row.names=TRUE,col.names=TRUE,sep='\t')
tpm_cd47=t(tpm['ENSG00000196776.16-CD47',])
write.table(tpm_cd47,file="tpm_cd47.txt",row.names = TRUE,col.names = TRUE,sep='\t')
tpm_cd47
t(tpm_cd47)
batches$cd47=t(tpm_cd47)[1]
batches
batches$cd47=t(tpm_cd47)
batches$cd47
batches$cd47=t(tpm_cd47)
ggplot(batches,
aes(x=batches$Condition,
y=batches$cd47,
group=batches$Cell))+
geom_boxplot()
ggplot(batches,
aes(x=batches$Condition,
y=batches$cd47,
fill=batches$Cell))+
geom_boxplot()
tpm=2^cleaned_E
write.table(tpm,file="corrected_tpm.txt",row.names=TRUE,col.names=TRUE,sep='\t')
tpm_cd47=tpm['ENSG00000196776.16-CD47',]
batches$cd47=tpm_cd47
ggplot(batches,
aes(x=batches$Condition,
y=batches$cd47,
fill=batches$Cell))+
geom_boxplot()
write.table(batches,file="tpm_cd47.txt",row.names = TRUE,col.names = TRUE,sep='\t')
source('~/brahma/cd47/plot_cd47.R')
data
source('~/brahma/cd47/plot_cd47.R')
source('~/brahma/cd47/plot_cd47.R')
source('~/brahma/cd47/plot_cd47.R')
fit
#LIMMA REGRESSION ANALYSIS
mod2=model.matrix(~0+Group,data=batches)
fit=lmFit(cleaned_E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC-ASD-DM - GroupIPSC-ASD-N",
IPSC_ASDDM_TDN="GroupIPSC-ASD-DM - GroupIPSC-TD-N",
IPSC_ASDN_TDN="GroupIPSC-ASD-N - GroupIPSC-TD-N",
NPC_ASDDM_ASDN="GroupNPC-ASD-DM - GroupNPC-ASD-N",
NPC_ASDDM_TDN="GroupNPC-ASD-DM - GroupNPC-TD-N",
NPC_ASDN_TDN="GroupNPC-ASD-N - GroupNPC-TD-N",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['CD47',])
}
model
fit
mod2
source('~/brahma/cd47/diff_analysis_cd47.R')
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
fit=lmFit(E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM - GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM - GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN - GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM - GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM - GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN - GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
mod2=model.matrix(~0+Group,data=batches)
fit=lmFit(cleaned_E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM - GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM - GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN - GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM - GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM - GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN - GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
fit=lmFit(2^cleaned_E,mod2)
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM - GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM - GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN - GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM - GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM - GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN - GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
cont.matrix=makeContrasts(IPSC_ASDDM_ASDN="GroupIPSC_ASDDM-GroupIPSC_ASDN",
IPSC_ASDDM_TDN="GroupIPSC_ASDDM-GroupIPSC_TDN",
IPSC_ASDN_TDN="GroupIPSC_ASDN-GroupIPSC_TDN",
NPC_ASDDM_ASDN="GroupNPC_ASDDM-GroupNPC_ASDN",
NPC_ASDDM_TDN="GroupNPC_ASDDM-GroupNPC_TDN",
NPC_ASDN_TDN="GroupNPC_ASDN-GroupNPC_TDN",levels=mod2)
fit2=contrasts.fit(fit,cont.matrix)
e=eBayes(fit2)
comparisons=colnames(cont.matrix)
for(i in seq(1,length(comparisons)))
{
print(comparisons[i])
print(topTable(e,number=nrow(e),coef=i)['ENSG00000196776.16-CD47',])
}
getwd()
setwd("~/brahma/gm12878_dnase/")
dir()
setwd("bQTL/")
dir()
source('~/brahma/gm12878_dnase/bQTL/correlation_count_profile_effects.R')
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref))+geom_bin2d(bins = 100) +
scale_fill_continuous(type = "viridis") +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$JSD))+geom_point(alpha=0.3) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$JSD))+geom_point(size=0.1) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$JSD))+geom_point(size=0.1,alpha=0.5) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
tfsig$similar=tfsig$JSD<0.10
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$similar))+geom_point(size=0.1,alpha=0.5) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
ggplot(data=tfsig,aes(x=abs(tfsig$sum_logratio_pred),
y=tfsig$abs_Alt_Minus_Ref,
color=tfsig$similar))+geom_point(size=0.1) +
theme_bw()+
xlab("abs(sum(log(prob(alt))-log(prob(ref))))")+
ylab("abs(log(count(alt))-log(count(ref)))")+
ggtitle(paste(tfname, "n=",
nrow(tfsig),
"spearman=",
round(cor(abs(tfsig$sum_logratio_pred),
tfsig$abs_Alt_Minus_Ref,
method='spearman')
,2)))
data.frame(Day = c("24 DOX-","2", "5", "8", "10", "14", "20", "24", "hESc", "hiF-C","hIPSC")
)
?read_excel
library(readxl)
?read_excel
install.packages(c('Matrix', 'Rcpp', 'RcppArmadillo', 'R.utils', 'hdf5r', 'plotly', 'ggpubr', 'corrplot', 'wordcloud', 'threejs', 'RColorBrewer'))
BiocManager::install(c("SingleCellExperiment", "ComplexHeatmap"))
install.packages(c('Matrix', 'Rcpp', 'RcppArmadillo', 'R.utils', 'hdf5r', 'plotly', 'ggpubr', 'corrplot', 'wordcloud', 'threejs', 'RColorBrewer'))
BiocManager::install(c("SingleCellExperiment", "ComplexHeatmap"))
install.packages(c('Matrix', 'Rcpp', 'RcppArmadillo', 'R.utils', 'hdf5r', 'plotly', 'ggpubr', 'corrplot', 'wordcloud', 'threejs', 'RColorBrewer'))
BiocManager::install(c("SingleCellExperiment", "ComplexHeatmap"))
install.packages(c('Matrix', 'Rcpp', 'RcppArmadillo', 'R.utils', 'hdf5r', 'plotly', 'ggpubr', 'corrplot', 'wordcloud', 'threejs', 'RColorBrewer'))
BiocManager::install(c("SingleCellExperiment", "ComplexHeatmap"))
install.packages("devtools")
devtools::install_github("shmohammadi86/ACTIONetExperiment"
)
install.packages(c('pals','seriation','batchlor','scran'))
install.packages(c('pals','seriation','batchlor','scran'))
install.packages(c('scater'))
BiocManager::install(c('batcholor','scran','scater'))
BiocManager::install(c('batchelor'))
ls
getwd()
setwd("ACTIONet/data")
dir()
setwd("../")
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
data
data
dat
data
plot.ACTIONet.gradient(data,data$num_umis)
data
colData(data)
plot.ACTIONet.gradient(data,data$clusters)
plot.ACTIONet.gradient(data,data$node_centrality)
library(ACTIONet)
plot.ACTIONet.gradient(data,data$node_centrality)
plot.ACTIONet.gradient(data,data$node_centrality)
library(ACTIONet)
plot.ACTIONet.gradient(data,data$node_centrality)
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
plot.ACTIONet.gradient(data,data$node_centrality)
plot.ACTIONet.gradient(data,data$node_centrality)
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
plot.ACTIONet.gradient(data,data$node_centrality)
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
library(ACTIONet)
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
library(ACTIONet)
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)+theme(
legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6))
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)+theme(
legend.position = 'top')
blah=plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)+theme(
legend.position = 'top')
blah
blah$scales
blah$theme
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
library(ACTIONet)
data=readr::read_rds("~/guideswap_exp74.nan.rds")
plot.ACTIONet.gradient(data,data$node_centrality,show_legend=T)
getwd()
rm(list=ls())
library(ggplot2)
genes_of_interest=c("HERC5",
"IFIT3",
"IFITM2",
"ISG15",
"ISG20",
"MX1",
"CD99",
"KIF22",
"MAZ",
"PLCG1",
"FLNB",
"PPP4C",
"DOC2A",
"PRRT2",
"SEZ6L2")
#genes_of_interest=c("GAPDH","TFRC","HSP90AB1","RPL30","RPS17","RPL37A","PPIA","RNA18S1","B2M","RPLPO","HPRT1","POP4","CDKN1B","ELF1")
genes_of_interest=c("CLDN6","IFIT1","KLF11", "MX1","FOXJ1","HERC5","PARP14","ISG20","SPINK5","LUM","UCP3","ETS1","SSTR2","IFIH1","C5AR1")
data=read.table("NPC_only.corrected_tpm.txt",header=TRUE,sep='\t',row.names = 1,check.names=FALSE)
#subset data to genes of interest
data=data[genes_of_interest,]
data=as.data.frame(t(data))
batches=read.table("merged_rsem/batches.txt",header=TRUE,sep='\t',row.names=1)
data=merge(data,batches,by=0)
conditions = c("TDN","ASDN","ASDDM")
data$Condition=factor(data$Condition, levels=conditions)
celltype = c("NPC")# "IPSC")
plot.list = lapply(genes_of_interest, function(gene){
p <- ggplot(data=data,
aes(x=data$Condition,
y=data[[gene]]))+
geom_boxplot(color='#FF0000',outlier.shape=NA)+
geom_jitter()+
ylab("TPM")+
xlab("Condition")+
ggtitle(paste(gene,'\nTPM,',"NPC"))+
theme_bw(20)
return(p)
})
library(gridExtra)
grid.arrange(grobs = plot.list, ncol=5,nrow=3)
getwd()
setwd("autism_rnaseq/post_processing/")
rm(list=ls())
library(ggplot2)
genes_of_interest=c("HERC5",
"IFIT3",
"IFITM2",
"ISG15",
"ISG20",
"MX1",
"CD99",
"KIF22",
"MAZ",
"PLCG1",
"FLNB",
"PPP4C",
"DOC2A",
"PRRT2",
"SEZ6L2")
#genes_of_interest=c("GAPDH","TFRC","HSP90AB1","RPL30","RPS17","RPL37A","PPIA","RNA18S1","B2M","RPLPO","HPRT1","POP4","CDKN1B","ELF1")
genes_of_interest=c("CLDN6","IFIT1","KLF11", "MX1","FOXJ1","HERC5","PARP14","ISG20","SPINK5","LUM","UCP3","ETS1","SSTR2","IFIH1","C5AR1")
data=read.table("NPC_only.corrected_tpm.txt",header=TRUE,sep='\t',row.names = 1,check.names=FALSE)
#subset data to genes of interest
data=data[genes_of_interest,]
data=as.data.frame(t(data))
batches=read.table("merged_rsem/batches.txt",header=TRUE,sep='\t',row.names=1)
data=merge(data,batches,by=0)
conditions = c("TDN","ASDN","ASDDM")
data$Condition=factor(data$Condition, levels=conditions)
plot.list = lapply(genes_of_interest, function(gene){
p <- ggplot(data=data,
aes(x=data$Condition,
y=data[[gene]]))+
geom_boxplot(color='#FF0000',outlier.shape=NA)+
geom_jitter()+
ylab("TPM")+
xlab("Condition")+
ggtitle(paste(gene,'\nTPM,',"NPC"))+
theme_bw(20)
return(p)
})
library(gridExtra)
grid.arrange(grobs = plot.list, ncol=5,nrow=3)
